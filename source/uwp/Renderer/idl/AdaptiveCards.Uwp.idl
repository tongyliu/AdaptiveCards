#include <sdkddkver.h>

import "inspectable.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Xaml.idl";
import "Windows.Data.Json.idl";

namespace AdaptiveCards
{
    namespace Uwp
    {
        runtimeclass AdaptiveCardRenderer;
        runtimeclass AdaptiveCardResourceResolvers;
        runtimeclass AdaptiveCardGetResourceStreamArgs;

        runtimeclass AdaptiveTextBlock;
        runtimeclass AdaptiveCard;
        runtimeclass AdaptiveImage;
        runtimeclass AdaptiveImageSet;
        runtimeclass AdaptiveContainer;
        runtimeclass AdaptiveColumn;
        runtimeclass AdaptiveColumnSet;
        runtimeclass AdaptiveFact;
        runtimeclass AdaptiveFactSet;
        runtimeclass AdaptiveChoiceInput;
        runtimeclass AdaptiveChoiceSetInput;
        runtimeclass AdaptiveDateInput;
        runtimeclass AdaptiveNumberInput;
        runtimeclass AdaptiveTextInput;
        runtimeclass AdaptiveTimeInput;
        runtimeclass AdaptiveToggleInput;
        runtimeclass AdaptiveSeparator;

        runtimeclass AdaptiveFontSizesConfig;
        runtimeclass AdaptiveFontWeightsConfig;
        runtimeclass AdaptiveColorsConfig;
        runtimeclass AdaptiveColorConfig;
        runtimeclass AdaptiveTextConfig;
        runtimeclass AdaptiveImageSizesConfig;
        runtimeclass AdaptiveImageSetConfig;
        runtimeclass AdaptiveContainerStyleConfig;
        runtimeclass AdaptiveImageConfig;
        runtimeclass AdaptiveCardConfig;
        runtimeclass AdaptiveFactSetConfig;
        runtimeclass AdaptiveShowCardActionConfig;
        runtimeclass AdaptiveActionsConfig;
        runtimeclass AdaptiveHostConfig;
        runtimeclass AdaptiveSpacingConfig;
        runtimeclass AdaptiveSeparatorConfig;
        runtimeclass AdaptiveContainerStyleDefinition;
        runtimeclass AdaptiveContainerStylesDefinition;
        runtimeclass AdaptiveActionEventArgs;
        runtimeclass RenderedAdaptiveCard;
        runtimeclass AdaptiveInputs;
        runtimeclass AdaptiveCardParseResult;
        runtimeclass AdaptiveHostConfigParseResult;

        runtimeclass AdaptiveElementParserRegistration;
        runtimeclass AdaptiveActionParserRegistration;
        runtimeclass AdaptiveCardRenderer;
        runtimeclass AdaptiveChoiceSetInputRenderer;
        runtimeclass AdaptiveColumnRenderer;
        runtimeclass AdaptiveColumnSetRenderer;
        runtimeclass AdaptiveContainerRenderer;
        runtimeclass AdaptiveDateInputRenderer;
        runtimeclass AdaptiveElementRendererRegistration;
        runtimeclass AdaptiveFactSetRenderer;
        runtimeclass AdaptiveImageRenderer;
        runtimeclass AdaptiveImageSetRenderer;
        runtimeclass AdaptiveNumberInputRenderer;
        runtimeclass AdaptiveRenderContext;
        runtimeclass AdaptiveRenderArgs;
        runtimeclass AdaptiveActionInvoker;
        runtimeclass AdaptiveTextBlockRenderer;
        runtimeclass AdaptiveTextInputRenderer;
        runtimeclass AdaptiveTimeInputRenderer;
        runtimeclass AdaptiveToggleInputRenderer;

        interface IAdaptiveCardResourceResolvers;
        interface IAdaptiveCardResourceResolver;
        interface IAdaptiveCardGetResourceStreamArgs;

        interface IAdaptiveCardElement;
        interface IAdaptiveActionElement;
        interface IAdaptiveTextBlock;
        interface IAdaptiveCard;
        interface IAdaptiveImage;
        interface IAdaptiveImageSet;
        interface IAdaptiveContainer;
        interface IAdaptiveColumn;
        interface IAdaptiveColumnSet;
        interface IAdaptiveFact;
        interface IAdaptiveFactSet;
        interface IAdaptiveChoiceInput;
        interface IAdaptiveChoiceSetInput;
        interface IAdaptiveDateInput;
        interface IAdaptiveTextInput;
        interface IAdaptiveNumberInput;
        interface IAdaptiveTimeInput;
        interface IAdaptiveToggleInput;
        interface IAdaptiveSeparator;

        interface IAdaptiveFontSizesConfig;
        interface IAdaptiveFontWeightsConfig;
        interface IAdaptiveColorConfig;
        interface IAdaptiveColorsConfig;
        interface IAdaptiveTextConfig;
        interface IAdaptiveImageSizesConfig;
        interface IAdaptiveImageSetConfig;
        interface IAdaptiveContainerStyleConfig;
        interface IAdaptiveImageConfig;
        interface IAdaptiveCardConfig;
        interface IAdaptiveFactSetConfig;
        interface IAdaptiveShowCardActionConfig;
        interface IAdaptiveActionsConfig;
        interface IAdaptiveHostConfig;
        interface IAdaptiveSpacingConfig;
        interface IAdaptiveSeparatorConfig;
        interface IAdaptiveContainerStyleDefinition;
        interface IAdaptiveContainerStylesDefinition;
        interface IRenderedAdaptiveCard;
        interface IAdaptiveInputs;
        interface IAdaptiveActionEventArgs;

        interface IAdaptiveElementParserRegistration;
        interface IAdaptiveElementParserRegistrationStatics;
        interface IAdaptiveActionParserRegistration;
        interface IAdaptiveActionParserRegistrationStatics;
        interface IAdaptiveElementParser;
        interface IAdaptiveActionParser;

        interface IAdaptiveElementRenderer;
        interface IAdaptiveElementRendererRegistration;
        interface IAdaptiveRenderContext;
        interface IAdaptiveRenderArgs;
        interface IAdaptiveActionInvoker;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextSize
        {
            Small = 0,
            Default,
            Medium,
            Large,
            ExtraLarge
        } TextSize;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextWeight
        {
            Lighter = 0,
            Default,
            Bolder
        } TextWeight;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ForegroundColor
        {
            Default = 0,
            Dark,
            Light,
            Accent,
            Good,
            Warning,
            Attention
        } ForegroundColor;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum HAlignment
        {
            Left = 0,
            Center,
            Right
        } HAlignment;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ElementType
        {
            Unsupported = 0,
            AdaptiveCard,
            TextBlock,
            Image,
            Container,
            Column,
            ColumnSet,
            FactSet,
            Fact,
            ImageSet,
            ChoiceInput,
            ChoiceSetInput,
            DateInput,
            NumberInput,
            TextInput,
            TimeInput,
            ToggleInput,
            Custom
        } ElementType;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionType
        {
            Unsupported = 0, 
            ShowCard,
            Submit,
            OpenUrl,
            Custom
        } ActionType;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ImageStyle {
            Default = 0,
            Person
        } ImageStyle;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ImageSize {
            None = 0,
            Auto,
            Stretch,
            Small,
            Medium,
            Large
        } ImageSize;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum SeparatorThickness {
            Default = 0,
            Thick,
        } SeparatorThickness;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum Spacing {
            Default = 0,
            None,
            Small,
            Medium,
            Large,
            ExtraLarge,
            Padding
        } Spacing;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionsOrientation {
            Vertical = 0,
            Horizontal
        } ActionsOrientation;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionAlignment {
            Left = 0,
            Center,
            Right,
            Stretch,
        } ActionAlignment;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ActionMode {
            Inline = 0,
            Popup
        } ActionMode;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ChoiceSetStyle {
            Compact = 0,
            Expanded
        } ChoiceSetStyle;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum TextInputStyle {
            Text = 0,
            Tel,
            Url,
            Email,
        } TextInputStyle;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum ContainerStyle {
            None = 0,
            Default,
            Emphasis
        } ContainerStyle;

        [version(NTDDI_WIN10_RS1)]
        typedef [v1_enum] enum InputValueMode
        {
            RawString = 0,
        } InputValueMode;

        declare
        {
            interface Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveActionElement*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveColumn*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveFact*>;
            interface Windows.Foundation.Collections.IVector<IAdaptiveChoiceInput*>;
            interface Windows.Foundation.Collections.IObservableVector<IAdaptiveCardElement*>;
            interface Windows.Foundation.Collections.IObservableVector<IAdaptiveColumn*>;
            interface Windows.Foundation.Collections.IObservableVector<IAdaptiveColumn*>;
            interface Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.UIElement*>;
            interface Windows.Foundation.IReference<Windows.UI.Text.FontWeight>;
        }

        [
            uuid(74D69C2F-7F1C-47FD-A319-F4B4E7F72EE9),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveCardElement : IInspectable
        {
            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Spacing([out, retval] Spacing* value);
            [propput] HRESULT Spacing([in] Spacing value);

            [propget] HRESULT Separator([out, retval] boolean* value);
            [propput] HRESULT Separator([in] boolean value);

            [propget] HRESULT Id([out, retval] HSTRING* value);
            [propput] HRESULT Id([in] HSTRING value);

            [propget] HRESULT ElementTypeString([out, retval] HSTRING* value);
        };

        [
            uuid(a2a0727a-e4aa-423d-b5b0-4b85f7a534c4),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveSeparator)
        ]
        interface IAdaptiveSeparator : IInspectable
        {
            [propget] HRESULT Color([out, retval] ForegroundColor* value);
            [propput] HRESULT Color([in] ForegroundColor value);

            [propget] HRESULT Thickness([out, retval] SeparatorThickness* value);
            [propput] HRESULT Thickness([in] SeparatorThickness value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveSeparator
        {
            [default] interface IAdaptiveSeparator;
        };

        [
            uuid(f3b844da-2d6a-4003-8a57-4e5541fcd078),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextBlock)
        ]
        interface IAdaptiveTextBlock : IInspectable
        {
            [propget] HRESULT Size([out, retval] TextSize* value);
            [propput] HRESULT Size([in] TextSize value);

            [propget] HRESULT Weight([out, retval] TextWeight* value);
            [propput] HRESULT Weight([in] TextWeight value);

            [propget] HRESULT Color([out, retval] ForegroundColor* value);
            [propput] HRESULT Color([in] ForegroundColor value);

            [propget] HRESULT Text([out, retval] HSTRING* value);
            [propput] HRESULT Text([in] HSTRING value);

            [propget] HRESULT IsSubtle([out, retval] boolean* value);
            [propput] HRESULT IsSubtle([in] boolean value);

            [propget] HRESULT Wrap([out, retval] boolean* value);
            [propput] HRESULT Wrap([in] boolean value);

            [propget] HRESULT HorizontalAlignment([out, retval] HAlignment* value);
            [propput] HRESULT HorizontalAlignment([in] HAlignment value);

            [propget] HRESULT MaxLines([out, retval] UINT32* value);
            [propput] HRESULT MaxLines([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextBlock
        {
            [default] interface IAdaptiveTextBlock;
            interface IAdaptiveCardElement;
        };

        [
            uuid(1fbf16f2-7c70-4b19-9d76-fb107fc33821),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCard),
        ]
        interface IAdaptiveCard : IInspectable
        {
            [propget] HRESULT Body([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>** value);

            [propget] HRESULT Actions([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveActionElement*>** value);

            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Version([out, retval] HSTRING* value);
            [propput] HRESULT Version([in] HSTRING value);

            [propget] HRESULT MinVersion([out, retval] HSTRING* value);
            [propput] HRESULT MinVersion([in] HSTRING value);

            [propget] HRESULT FallbackText([out, retval] HSTRING* value);
            [propput] HRESULT FallbackText([in] HSTRING value);

            [propget] HRESULT BackgroundImage([out, retval] Windows.Foundation.Uri** value);
            [propput] HRESULT BackgroundImage([in] Windows.Foundation.Uri* value);

            [propget] HRESULT Speak([out, retval] HSTRING* value);
            [propput] HRESULT Speak([in] HSTRING value);

            [propget] HRESULT Style([out, retval] ContainerStyle* value);
            [propput] HRESULT Style([in] ContainerStyle value);

            HRESULT ToJson([out, retval] Windows.Data.Json.JsonObject** value);
        };

        [
            uuid(b4db0937-025a-4c08-980b-750703e77e37),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCardParseResult)
        ]
        interface IAdaptiveCardParseResult : IInspectable
        {
            [propget] HRESULT AdaptiveCard([out, retval] AdaptiveCard** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
        ]
        runtimeclass AdaptiveCardParseResult
        {
            [default] interface IAdaptiveCardParseResult;
        }

        [
            uuid(bace01f2-5642-4366-879a-dec601d8b7e3),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCard),
        ]
        interface IAdaptiveCardStatics : IInspectable
        {
            HRESULT FromJson([in] Windows.Data.Json.JsonObject* adaptiveJson, [out, retval] AdaptiveCardParseResult** card);
            HRESULT FromJsonString([in] HSTRING adaptiveJson, [out, retval] AdaptiveCardParseResult** card);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
            static(IAdaptiveCardStatics, NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveCard
        {
            [default] interface IAdaptiveCard;
        }

        [
            uuid(16452a2e-1152-47f3-90bd-6e4148b09669),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveImage : IInspectable
        {
            [propget] HRESULT Url([out, retval] Windows.Foundation.Uri** value);
            [propput] HRESULT Url([in] Windows.Foundation.Uri* value);

            [propget] HRESULT Style([out, retval] ImageStyle* value);
            [propput] HRESULT Style([in] ImageStyle value);

            [propget] HRESULT Size([out, retval] ImageSize* value);
            [propput] HRESULT Size([in] ImageSize value);

            [propget] HRESULT HorizontalAlignment([out, retval] HAlignment* value);
            [propput] HRESULT HorizontalAlignment([in] HAlignment value);

            [propget] HRESULT AltText([out, retval] HSTRING* value);
            [propput] HRESULT AltText([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImage
        {
            [default] interface IAdaptiveImage;
            interface IAdaptiveCardElement;
        };

        [
            uuid(f618bd35-8fe3-46bd-8988-cdf5607314d1),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageSet)
        ]
        interface IAdaptiveImageSet : IInspectable
        {
            [propget] HRESULT Images([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveImage*>** value);

            [propget] HRESULT ImageSize([out, retval] ImageSize* value);
            [propput] HRESULT ImageSize([in] ImageSize value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageSet
        {
            [default] interface IAdaptiveImageSet;
            interface IAdaptiveCardElement;
        };

        [
            uuid(9b10f5ef-26e8-4d65-ba76-b986b5e90586),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveInputElement : IInspectable
        {
            [propget] HRESULT IsRequired([out, retval] boolean* value);
            [propput] HRESULT IsRequired([in] boolean value);
        };

        [
            uuid(99797dfe-d39c-43a4-9f2b-d457cc358e1e),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveChoiceInput : IInspectable
        {
            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
            
            [propget] HRESULT IsSelected([out, retval] boolean* value);
            [propput] HRESULT IsSelected([in] boolean value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveChoiceInput
        {
            [default] interface IAdaptiveChoiceInput;
        };

        [
            uuid(ce0735ef-f983-4a5e-bdad-f5eb7f962faa),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveChoiceSetInput : IInspectable
        {
            [propget] HRESULT IsMultiSelect([out, retval] boolean* value);
            [propput] HRESULT IsMultiSelect([in] boolean value);

            [propget] HRESULT ChoiceSetStyle([out, retval] ChoiceSetStyle* value);
            [propput] HRESULT ChoiceSetStyle([in] ChoiceSetStyle value);

            [propget] HRESULT Choices([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveChoiceInput*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveChoiceSetInput
        {
            [default] interface IAdaptiveChoiceSetInput;
            interface IAdaptiveInputElement;
            interface IAdaptiveCardElement;
        };

        [
            uuid(359e2cc5-9b8d-40bf-bbb2-2d3494d30991),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveDateInput)
        ]
        interface IAdaptiveDateInput : IInspectable
        {
            [propget] HRESULT Max([out, retval] HSTRING* value);
            [propput] HRESULT Max([in] HSTRING value);

            [propget] HRESULT Min([out, retval] HSTRING* value);
            [propput] HRESULT Min([in] HSTRING value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveDateInput
        {
            [default] interface IAdaptiveDateInput;
            interface IAdaptiveInputElement;
            interface IAdaptiveCardElement;
        };

        [
            uuid(3bd0868c-5fbd-4341-91ff-4b07eb2bd54c),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveNumberInput)
        ]
        interface IAdaptiveNumberInput : IInspectable
        {
            [propget] HRESULT Max([out, retval] INT32 *value);
            [propput] HRESULT Max([in] INT32 value);

            [propget] HRESULT Min([out, retval] INT32 *value);
            [propput] HRESULT Min([in] INT32 value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] INT32* value);
            [propput] HRESULT Value([in] INT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveNumberInput
        {
            [default] interface IAdaptiveNumberInput;
            interface IAdaptiveInputElement;
            interface IAdaptiveCardElement;
        };

        [
            uuid(ab30772b-172d-4595-bcd2-01001df19d1e),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextInput)
        ]
        interface IAdaptiveTextInput : IInspectable
        {
            [propget] HRESULT IsMultiline([out, retval] boolean* value);
            [propput] HRESULT IsMultiline([in] boolean value);

            [propget] HRESULT MaxLength([out, retval] UINT32* value);
            [propput] HRESULT MaxLength([in] UINT32 value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);

            [propget] HRESULT TextInputStyle([out, retval] TextInputStyle* value);
            [propput] HRESULT TextInputStyle([in] TextInputStyle value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextInput
        {
            [default] interface IAdaptiveTextInput;
            interface IAdaptiveInputElement;
            interface IAdaptiveCardElement;
        };

        [
            uuid(1ee90aff-93e8-4292-ac49-39d4c3289cd9),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTimeInput)
        ]
        interface IAdaptiveTimeInput : IInspectable
        {
            [propget] HRESULT Max([out, retval] HSTRING* value);
            [propput] HRESULT Max([in] HSTRING value);

            [propget] HRESULT Min([out, retval] HSTRING* value);
            [propput] HRESULT Min([in] HSTRING value);

            [propget] HRESULT Placeholder([out, retval] HSTRING* value);
            [propput] HRESULT Placeholder([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTimeInput
        {
            [default] interface IAdaptiveTimeInput;
            interface IAdaptiveInputElement;
            interface IAdaptiveCardElement;
        };

        [
            uuid(e8af72a5-597c-4a19-b9c2-1a597db1c79a),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveToggleInput)
        ]
        interface IAdaptiveToggleInput : IInspectable
        {
            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);

            [propget] HRESULT ValueOff([out, retval] HSTRING* value);
            [propput] HRESULT ValueOff([in] HSTRING value);

            [propget] HRESULT ValueOn([out, retval] HSTRING* value);
            [propput] HRESULT ValueOn([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveToggleInput
        {
            [default] interface IAdaptiveToggleInput;
            interface IAdaptiveInputElement;
            interface IAdaptiveCardElement;
        };

        [
            uuid(ba90da3f-556c-4e3a-9d01-11f2ce78dcd7),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveContainer : IInspectable
        {
            [propget] HRESULT Style([out, retval] ContainerStyle* value);
            [propput] HRESULT Style([in] ContainerStyle value);

            [propget] HRESULT Items([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>** value);

            [propget] HRESULT SelectAction([out, retval] IAdaptiveActionElement** value);
            [propput] HRESULT SelectAction([in] IAdaptiveActionElement* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveContainer
        {
            [default] interface IAdaptiveContainer;
            interface IAdaptiveCardElement;
        };

        [
            uuid(91e03800-d239-43bc-b5fb-2ccfe0cc7fcb),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveColumn : IInspectable
        {
            [propget] HRESULT Width([out, retval] HSTRING* value);
            [propput] HRESULT Width([in] HSTRING value);

            [propget] HRESULT Style([out, retval] ContainerStyle* value);
            [propput] HRESULT Style([in] ContainerStyle value);

            [propget] HRESULT Items([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveCardElement*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumn
        {
            [default] interface IAdaptiveColumn;
            interface IAdaptiveCardElement;
        };

        [
            uuid(4e3e1cd1-906b-4718-96ea-0a6e16bf0199),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColumnSet)
        ]
        interface IAdaptiveColumnSet : IInspectable
        {
            [propget] HRESULT Columns([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveColumn*>** value);

            [propget] HRESULT SelectAction([out, retval] IAdaptiveActionElement** value);
            [propput] HRESULT SelectAction([in] IAdaptiveActionElement* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumnSet
        {
            [default] interface IAdaptiveColumnSet;
            interface IAdaptiveCardElement;
        };


        [
            uuid(5c19aa31-03aa-4148-a529-75b855ba045b),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveFact : IInspectable
        {
            [propget] HRESULT ElementType([out, retval] ElementType* value);

            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Value([out, retval] HSTRING* value);
            [propput] HRESULT Value([in] HSTRING value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFact
        {
            [default] interface IAdaptiveFact;
        };

        [
            uuid(05457b99-8090-4937-a637-b469f8edc74f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveFactSet)
        ]
        interface IAdaptiveFactSet : IInspectable
        {
            [propget] HRESULT Facts([out, retval] Windows.Foundation.Collections.IVector<IAdaptiveFact*>** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFactSet
        {
            [default] interface IAdaptiveFactSet;
            interface IAdaptiveCardElement;
        };

        [
            uuid(b0586bc4-b62a-4520-84b8-6c2afb88d022),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCardRenderer),
        ]
        interface IAdaptiveCardRenderer : IInspectable
        {
            [propget] HRESULT ResourceResolvers([out, retval] AdaptiveCardResourceResolvers** value);

            [propget] HRESULT HostConfig([out, retval] AdaptiveHostConfig** hostConfig);
            [propput] HRESULT HostConfig([in] AdaptiveHostConfig* hostConfig);

            HRESULT SetOverrideStyles([in] Windows.UI.Xaml.ResourceDictionary* overrideDictionary);
            HRESULT SetFixedDimensions([in] UINT32 desiredWidth, [in] UINT32 desiredHeight);
            HRESULT ResetFixedDimensions();

            HRESULT RenderAdaptiveCard([in] AdaptiveCard* adaptiveCard, [out, retval] RenderedAdaptiveCard** result);

            HRESULT RenderAdaptiveCardFromJsonString([in] HSTRING adaptiveJson, [out, retval] RenderedAdaptiveCard** result);

            HRESULT RenderAdaptiveCardFromJson([in] Windows.Data.Json.JsonObject* adaptiveJson, [out, retval] RenderedAdaptiveCard** result);

            [propget] HRESULT ElementRenderers([out, retval] AdaptiveElementRendererRegistration** result);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
        ]
        runtimeclass AdaptiveCardRenderer
        {
            [default] interface IAdaptiveCardRenderer;
        };

        [
            uuid(6bc7a30c-6971-474d-8dd3-bb9e1bcde381),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveActionEventArgs)
        ]
        interface IAdaptiveActionEventArgs : IInspectable
        {
            [propget] HRESULT Action([out, retval] IAdaptiveActionElement** action);
            [propget] HRESULT Inputs([out, retval] AdaptiveInputs** value);
        }

        [
            version(NTDDI_WIN10_RS1),
        ]
        runtimeclass AdaptiveActionEventArgs
        {
            [default] interface IAdaptiveActionEventArgs;
        };

        [
            uuid(ae687d0f-ce50-483c-8478-a17d017d4c25),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveContainerStyleDefinition)
        ]
        interface IAdaptiveContainerStyleDefinition : IInspectable
        {
            [propget] HRESULT BackgroundColor([out][retval] Windows.UI.Color* value);
            [propput] HRESULT BackgroundColor([in] Windows.UI.Color value);

            [propget] HRESULT ForegroundColors([out, retval] AdaptiveColorsConfig** value);
            [propput] HRESULT ForegroundColors([in] AdaptiveColorsConfig* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveContainerStyleDefinition
        {
            [default] interface IAdaptiveContainerStyleDefinition;
        };

        [
            uuid(7e57fadd-78a6-4501-a769-a8a44bb9f9d2),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveContainerStylesDefinition)
        ]
        interface IAdaptiveContainerStylesDefinition : IInspectable
        {
            [propget] HRESULT Default([out, retval] AdaptiveContainerStyleDefinition** value);
            [propput] HRESULT Default([in] AdaptiveContainerStyleDefinition* value);

            [propget] HRESULT Emphasis([out, retval] AdaptiveContainerStyleDefinition** value);
            [propput] HRESULT Emphasis([in] AdaptiveContainerStyleDefinition* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveContainerStylesDefinition
        {
            [default] interface IAdaptiveContainerStylesDefinition;
        };

        [
            uuid(ebca0eab-b08b-4087-9c42-4667ec6ab0e0),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveFontSizesConfig)
        ]
        interface IAdaptiveFontSizesConfig : IInspectable
        {
            [propget] HRESULT Small([out, retval] UINT32* value);
            [propput] HRESULT Small([in] UINT32 value);

            [propget] HRESULT Default([out, retval] UINT32* value);
            [propput] HRESULT Default([in] UINT32 value);

            [propget] HRESULT Medium([out, retval] UINT32* value);
            [propput] HRESULT Medium([in] UINT32 value);

            [propget] HRESULT Large([out, retval] UINT32* value);
            [propput] HRESULT Large([in] UINT32 value);

            [propget] HRESULT ExtraLarge([out, retval] UINT32* value);
            [propput] HRESULT ExtraLarge([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFontSizesConfig
        {
            [default] interface IAdaptiveFontSizesConfig;
        };

        [
            uuid(23c9d287-afdc-4ca4-87b4-92c551e4c8bc),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveFontWeightsConfig)
        ]
        interface IAdaptiveFontWeightsConfig : IInspectable
        {
            [propget] HRESULT Lighter([out, retval] UINT16 *value);
            [propput] HRESULT Lighter([in] UINT16 value);

            [propget] HRESULT Default([out, retval] UINT16 *value);
            [propput] HRESULT Default([in] UINT16 value);

            [propget] HRESULT Bolder([out, retval] UINT16 *value);
            [propput] HRESULT Bolder([in] UINT16 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFontWeightsConfig
        {
            [default] interface IAdaptiveFontWeightsConfig;
        };

        [
            uuid(421149d7-65e9-4ec9-b70b-802ba7d6cf98),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColorConfig)
        ]
        interface IAdaptiveColorConfig : IInspectable
        {
            [propget] HRESULT Default([out][retval] Windows.UI.Color* value);
            [propput] HRESULT Default([in] Windows.UI.Color value);

            [propget] HRESULT Subtle([out][retval] Windows.UI.Color* value);
            [propput] HRESULT Subtle([in] Windows.UI.Color value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColorConfig
        {
            [default] interface IAdaptiveColorConfig;
        };

        [
            uuid(1ade7d94-f0ae-4301-a9e2-b1f9c065916f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveColorsConfig)
        ]
        interface IAdaptiveColorsConfig : IInspectable
        {
            [propget] HRESULT Default([out][retval] AdaptiveColorConfig** value);
            [propput] HRESULT Default([in] AdaptiveColorConfig* value);

            [propget] HRESULT Accent([out][retval] AdaptiveColorConfig** value);
            [propput] HRESULT Accent([in] AdaptiveColorConfig* value);

            [propget] HRESULT Dark([out][retval] AdaptiveColorConfig** value);
            [propput] HRESULT Dark([in] AdaptiveColorConfig* value);

            [propget] HRESULT Light([out][retval] AdaptiveColorConfig** value);
            [propput] HRESULT Light([in] AdaptiveColorConfig* value);

            [propget] HRESULT Good([out][retval] AdaptiveColorConfig** value);
            [propput] HRESULT Good([in] AdaptiveColorConfig* value);

            [propget] HRESULT Warning([out][retval] AdaptiveColorConfig** value);
            [propput] HRESULT Warning([in] AdaptiveColorConfig* value);

            [propget] HRESULT Attention([out][retval] AdaptiveColorConfig** value);
            [propput] HRESULT Attention([in] AdaptiveColorConfig* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColorsConfig
        {
            [default] interface IAdaptiveColorsConfig;
        };

        [
            uuid(d730ba59-1f48-4dc6-8375-17f364f6086a),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveTextConfig)
        ]
        interface IAdaptiveTextConfig : IInspectable
        {
            [propget] HRESULT Weight([out, retval] TextWeight* value);
            [propput] HRESULT Weight([in] TextWeight value);

            [propget] HRESULT Size([out, retval] TextSize* value);
            [propput] HRESULT Size([in] TextSize value);

            [propget] HRESULT Color([out, retval] ForegroundColor* value);
            [propput] HRESULT Color([in] ForegroundColor value);
 
            [propget] HRESULT IsSubtle([out, retval] boolean* value);
            [propput] HRESULT IsSubtle([in] boolean value);

            [propget] HRESULT Wrap([out, retval] boolean* value);
            [propput] HRESULT Wrap([in] boolean value);

            [propget] HRESULT MaxWidth([out, retval] UINT32* value);
            [propput] HRESULT MaxWidth([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextConfig
        {
            [default] interface IAdaptiveTextConfig;
        };

        [
            uuid(0e21ac82-4838-43cb-b7ef-7b023011061b),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveSpacingConfig)
        ]
        interface IAdaptiveSpacingConfig : IInspectable
        {
            [propget] HRESULT Small([out, retval] UINT32* value);
            [propput] HRESULT Small([in] UINT32 value);

            [propget] HRESULT Default([out, retval] UINT32* value);
            [propput] HRESULT Default([in] UINT32 value);

            [propget] HRESULT Medium([out, retval] UINT32* value);
            [propput] HRESULT Medium([in] UINT32 value);

            [propget] HRESULT Large([out, retval] UINT32* value);
            [propput] HRESULT Large([in] UINT32 value);

            [propget] HRESULT ExtraLarge([out, retval] UINT32* value);
            [propput] HRESULT ExtraLarge([in] UINT32 value);

            [propget] HRESULT Padding([out, retval] UINT32* value);
            [propput] HRESULT Padding([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveSpacingConfig
        {
            [default] interface IAdaptiveSpacingConfig;
        };

        [
            uuid(c34a155d-6913-4f8b-9b94-f4ab8c578aee),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveSeparatorConfig)
        ]
        interface IAdaptiveSeparatorConfig : IInspectable
        {
            [propget] HRESULT LineThickness([out, retval] UINT32* value);
            [propput] HRESULT LineThickness([in] UINT32 value);

            [propget] HRESULT LineColor([out][retval] Windows.UI.Color* value);
            [propput] HRESULT LineColor([in] Windows.UI.Color value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveSeparatorConfig
        {
            [default] interface IAdaptiveSeparatorConfig;
        };

        [
            uuid(ce5cd318-502c-4017-a076-4f8cdbb0316d),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageSizesConfig)
        ]
        interface IAdaptiveImageSizesConfig : IInspectable
        {
            [propget] HRESULT Small([out, retval] UINT32* value);
            [propput] HRESULT Small([in] UINT32 value);

            [propget] HRESULT Medium([out, retval] UINT32* value);
            [propput] HRESULT Medium([in] UINT32 value);

            [propget] HRESULT Large([out, retval] UINT32* value);
            [propput] HRESULT Large([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageSizesConfig
        {
            [default] interface IAdaptiveImageSizesConfig;
        };
                
        [
            uuid(29685cc3-027f-4da8-9659-6d3a53c34d88),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageSetConfig)
        ]
        interface IAdaptiveImageSetConfig : IInspectable
        {
            [propget] HRESULT ImageSize([out, retval] ImageSize* value);
            [propput] HRESULT ImageSize([in] ImageSize value);
        
            [propget] HRESULT MaxImageHeight([out, retval] UINT32* value);
            [propput] HRESULT MaxImageHeight([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageSetConfig
        {
            [default] interface IAdaptiveImageSetConfig;
        }

        [
            uuid(ba0d7d84-d708-4919-a2f2-5c322a6f5460),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveImageConfig)
        ]
        interface IAdaptiveImageConfig : IInspectable
        {
            [propget] HRESULT ImageSize([out, retval] ImageSize* value);
            [propput] HRESULT ImageSize([in] ImageSize value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageConfig
        {
            [default] interface IAdaptiveImageConfig;
        };

        [
            uuid(9363ea9c-9f73-4e7d-8d6e-0559ac52b314),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCardConfig)
        ]
        interface IAdaptiveCardConfig : IInspectable
        {
            [propget] HRESULT AllowCustomStyle([out, retval] boolean* value);
            [propput] HRESULT AllowCustomStyle([in] boolean value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveCardConfig
        {
            [default] interface IAdaptiveCardConfig;
        };

        [
            uuid(9949ed60-fbc0-49fd-80d4-29fb1184854d),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveFactSetConfig)
        ]
        interface IAdaptiveFactSetConfig : IInspectable
        {
            [propget] HRESULT Title([out, retval] AdaptiveTextConfig** value);
            [propput] HRESULT Title([in] AdaptiveTextConfig* value);

            [propget] HRESULT Value([out, retval] AdaptiveTextConfig** value);
            [propput] HRESULT Value([in] AdaptiveTextConfig* value);

            [propget] HRESULT Spacing([out][retval] UINT32* value);
            [propput] HRESULT Spacing([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFactSetConfig
        {
            [default] interface IAdaptiveFactSetConfig;
        };

        [
            uuid(eacabf24-288c-4307-bd5a-5888a00da918),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveShowCardActionConfig)
        ]
        interface IAdaptiveShowCardActionConfig : IInspectable
        {
            [propget] HRESULT ActionMode([out, retval] ActionMode *value);
            [propput] HRESULT ActionMode([in] ActionMode value);

            [propget] HRESULT Style([out, retval] ContainerStyle* value);
            [propput] HRESULT Style([in] ContainerStyle value);

            [propget] HRESULT InlineTopMargin([out, retval] UINT32* value);
            [propput] HRESULT InlineTopMargin([in] UINT32 value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveShowCardActionConfig
        {
            [default] interface IAdaptiveShowCardActionConfig;
        };

        [
            uuid(c01e7195-0c83-4fed-9911-3845bdb8ebc6),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveActionsConfig)
        ]
        interface IAdaptiveActionsConfig : IInspectable
        {
            [propget] HRESULT ShowCard([out, retval] AdaptiveShowCardActionConfig** value);
            [propput] HRESULT ShowCard([in] AdaptiveShowCardActionConfig* value);

            [propget] HRESULT ActionsOrientation([out][retval] ActionsOrientation* value);
            [propput] HRESULT ActionsOrientation([in] ActionsOrientation value);

            [propget] HRESULT ActionAlignment([out, retval] ActionAlignment* value);
            [propput] HRESULT ActionAlignment([in] ActionAlignment value);

            [propget] HRESULT ButtonSpacing([out][retval] UINT32* value);
            [propput] HRESULT ButtonSpacing([in] UINT32 value);

            [propget] HRESULT MaxActions([out][retval] UINT32* value);
            [propput] HRESULT MaxActions([in] UINT32 value);

            [propget] HRESULT Spacing([out][retval] Spacing* value);
            [propput] HRESULT Spacing([in] Spacing value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveActionsConfig
        {
            [default] interface IAdaptiveActionsConfig;
        };

        [
            uuid(85ef9ddc-4599-4ab6-adf1-1e04238601a5),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveHostConfig)
        ]
        interface IAdaptiveHostConfig : IInspectable
        {
            [propget] HRESULT FontFamily([out, retval] HSTRING* value);
            [propput] HRESULT FontFamily([in] HSTRING value);

            [propget] HRESULT FontSizes([out, retval] AdaptiveFontSizesConfig** value);
            [propput] HRESULT FontSizes([in] AdaptiveFontSizesConfig* value);

            [propget] HRESULT FontWeights([out, retval] AdaptiveFontWeightsConfig** value);
            [propput] HRESULT FontWeights([in] AdaptiveFontWeightsConfig* value);

            [propget] HRESULT SupportsInteractivity([out, retval] boolean* value);
            [propput] HRESULT SupportsInteractivity([in] boolean value);

            [propget] HRESULT ContainerStyles([out, retval] AdaptiveContainerStylesDefinition** value);
            [propput] HRESULT ContainerStyles([in] AdaptiveContainerStylesDefinition* value);

            [propget] HRESULT ImageSizes([out, retval] AdaptiveImageSizesConfig** value);
            [propput] HRESULT ImageSizes([in] AdaptiveImageSizesConfig* value);

            [propget] HRESULT Separator([out, retval] AdaptiveSeparatorConfig** value);
            [propput] HRESULT Separator([in] AdaptiveSeparatorConfig* value);

            [propget] HRESULT Spacing([out, retval] AdaptiveSpacingConfig** value);
            [propput] HRESULT Spacing([in] AdaptiveSpacingConfig* value);

            [propget] HRESULT AdaptiveCard([out, retval] AdaptiveCardConfig** value);
            [propput] HRESULT AdaptiveCard([in] AdaptiveCardConfig* value);

            [propget] HRESULT ImageSet([out, retval] AdaptiveImageSetConfig** value);
            [propput] HRESULT ImageSet([in] AdaptiveImageSetConfig* value);

            [propget] HRESULT Image([out, retval] AdaptiveImageConfig** value);
            [propput] HRESULT Image([in] AdaptiveImageConfig* value);

            [propget] HRESULT FactSet([out, retval] AdaptiveFactSetConfig** value);
            [propput] HRESULT FactSet([in] AdaptiveFactSetConfig* value);

            [propget] HRESULT Actions([out, retval] AdaptiveActionsConfig** value);
            [propput] HRESULT Actions([in] AdaptiveActionsConfig* value);
        };

        [
            uuid(0b1f8963-9d45-4ac0-9af4-cd7923f5206e),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveHostConfigParseResult)
        ]
        interface IAdaptiveHostConfigParseResult : IInspectable
        {
            [propget] HRESULT HostConfig([out, retval] AdaptiveHostConfig** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
        ]
        runtimeclass AdaptiveHostConfigParseResult
        {
            [default] interface IAdaptiveHostConfigParseResult;
        }

        [
            uuid(1a09b9b7-d678-495f-949e-3ad677424fdb),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveHostConfig),
        ]
        interface IAdaptiveHostConfigStatics : IInspectable
        {
            HRESULT FromJsonString([in] HSTRING hostConfigJson, [out, retval] AdaptiveHostConfigParseResult** config);
            HRESULT FromJson([in] Windows.Data.Json.JsonObject* hostConfigJson, [out, retval] AdaptiveHostConfigParseResult** config);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1),
            static(IAdaptiveHostConfigStatics, NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveHostConfig
        {
            [default] interface IAdaptiveHostConfig;
        };

        [
            uuid(f0076852-de82-4cc6-8cb3-26cf6ab3c196),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveActionElement : IInspectable
        {
            [propget] HRESULT ActionType([out, retval] ActionType* value);
            [propget] HRESULT ActionTypeString([out, retval] HSTRING* value);

            [propget] HRESULT Title([out, retval] HSTRING* value);
            [propput] HRESULT Title([in] HSTRING value);

            [propget] HRESULT Id([out, retval] HSTRING* value);
            [propput] HRESULT Id([in] HSTRING value);

            [propget] HRESULT AdditionalProperties([out, retval] Windows.Data.Json.JsonObject** json);
            [propput] HRESULT AdditionalProperties([in] Windows.Data.Json.JsonObject* json);
        };

        [
            uuid(d70a58cb-4d51-4f96-bb6b-2698eced32ff),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveOpenUrlAction : IInspectable
        {
            [propput] HRESULT Url([in] Windows.Foundation.Uri* value);
            [propget] HRESULT Url([out, retval] Windows.Foundation.Uri** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveOpenUrlAction
        {
            [default] interface IAdaptiveOpenUrlAction;
            interface IAdaptiveActionElement;
        };

        [
            uuid(435ea974-33c7-43b0-a6ac-8137c1b7bb44),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveShowCardAction : IInspectable
        {
            [propget] HRESULT Card([out, retval] AdaptiveCard** value);
            [propput] HRESULT Card([in] AdaptiveCard* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveShowCardAction
        {
            [default] interface IAdaptiveShowCardAction;
            interface IAdaptiveActionElement;
        };

        [
            uuid(97b9b3a3-657b-4d38-a136-154cc8da19a9),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveSubmitAction : IInspectable
        {
            [propget] HRESULT DataJson([out, retval] Windows.Data.Json.JsonObject** value);
            [propput] HRESULT DataJson([in] Windows.Data.Json.JsonObject* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveSubmitAction
        {
            [default] interface IAdaptiveSubmitAction;
            interface IAdaptiveActionElement;
        };

        [
            uuid(3b655db6-54d2-47e7-8658-b58ced5fb237),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCardResourceResolvers)
        ]
        interface IAdaptiveCardResourceResolvers : IInspectable
        {
            HRESULT Set([in] HSTRING scheme, [in] IAdaptiveCardResourceResolver* resolver);
            HRESULT Get([in] HSTRING scheme, [out, retval] IAdaptiveCardResourceResolver** resolver);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveCardResourceResolvers
        {
            [default] interface IAdaptiveCardResourceResolvers;
        };

        [
            uuid(30f17ba9-133a-4484-8002-a8f4b6764e3f),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveCardResourceResolver : IInspectable
        {
            HRESULT GetResourceStreamAsync([in] AdaptiveCardGetResourceStreamArgs* args, [out, retval] Windows.Foundation.IAsyncOperation<Windows.Storage.Streams.IRandomAccessStream*>** result);
        };

        [
            uuid(e1d63f44-6550-454f-99f4-d02df5ae9b8c),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCardGetResourceStreamArgs)
        ]
        interface IAdaptiveCardGetResourceStreamArgsFactory : IInspectable
        {
            HRESULT CreateAdaptiveCardGetResourceStreamArgs(
                [in] Windows.Foundation.Uri* value,
                [out, retval] AdaptiveCardGetResourceStreamArgs** args
                );
        };

        [
            uuid(0eea761b-5a3e-4f1f-86f6-d511c178e671),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveCardGetResourceStreamArgs)
        ]
        interface IAdaptiveCardGetResourceStreamArgs : IInspectable
        {
            [propget] HRESULT Url([out, retval] Windows.Foundation.Uri** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(IAdaptiveCardGetResourceStreamArgsFactory, NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveCardGetResourceStreamArgs
        {
            [default] interface IAdaptiveCardGetResourceStreamArgs;
        };

        [
            uuid(7bf9ceac-105c-421a-8b4e-8e5be9ead986),
            version(NTDDI_WIN10_RS1),
            exclusiveto(RenderedAdaptiveCard)
        ]
        interface IRenderedAdaptiveCard : IInspectable
        {
            [propget] HRESULT OriginatingCard([out, retval] AdaptiveCard** value);

            [propget] HRESULT FrameworkElement([out, retval] Windows.UI.Xaml.UIElement** value);

            [propget] HRESULT UserInputs([out, retval] AdaptiveInputs** value);

            [eventadd] HRESULT Action([in] Windows.Foundation.TypedEventHandler<RenderedAdaptiveCard*, AdaptiveActionEventArgs*>* pHandler, [out][retval] EventRegistrationToken* pToken);
            [eventremove] HRESULT Action([in] EventRegistrationToken token);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass RenderedAdaptiveCard
        {
            [default] interface IRenderedAdaptiveCard;
        };

        [
            uuid(a172be96-7ab5-4faa-a0fd-99e8160e359e),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveInputs)
        ]
        interface IAdaptiveInputs : IInspectable
        {
            HRESULT AsJson([in] InputValueMode inputMode, [out, retval] Windows.Data.Json.JsonObject** value);
            HRESULT AsValueSet([out, retval] Windows.Foundation.Collections.ValueSet** value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveInputs
        {
            [default] interface IAdaptiveInputs;
        };

        [
            uuid(c42c7757-8cf0-49dc-8c8e-a341963eaba2),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveElementParser : IInspectable
        {
            HRESULT FromJson([in] Windows.Data.Json.JsonObject* inputJson, [out, retval] IAdaptiveCardElement** result);
        };

        [
            uuid(ae307fdc-6a4e-4e10-a9d4-518ccee99c3b),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveElementParserRegistration)
        ]
        interface IAdaptiveElementParserRegistration : IInspectable
        {
            HRESULT Set([in] HSTRING type, [in] IAdaptiveElementParser* parser);
            HRESULT Get([in] HSTRING type, [out, retval] IAdaptiveElementParser** result);
            HRESULT Remove([in] HSTRING type);
        };

        [
            uuid(f17ba6c5-9eb7-43db-8d72-db5d398d3d39),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveElementParserRegistration),
        ]
        interface IAdaptiveElementParserRegistrationStatics : IInspectable
        {
            HRESULT GetDefault([out, retval] AdaptiveElementParserRegistration** result);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveElementParserRegistration
        {
            [default] interface IAdaptiveElementParserRegistration;
        };

        [
            uuid(a730c2e9-6ee8-4b03-b706-60138c66a4a8),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveActionParserRegistration)
        ]
        interface IAdaptiveActionParserRegistration : IInspectable
        {
            HRESULT Set([in] HSTRING type, [in] IAdaptiveActionParser* Parser);
            HRESULT Get([in] HSTRING type, [out, retval] IAdaptiveActionParser** result);
            HRESULT Remove([in] HSTRING type);
        };

        [
            uuid(27e0c83f-143a-4d32-a4a9-9794312fd051),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveActionParserRegistration),
        ]
        interface IAdaptiveActionParserRegistrationStatics : IInspectable
        {
            HRESULT GetDefault([out, retval] AdaptiveActionParserRegistration** result);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveActionParserRegistration
        {
            [default] interface IAdaptiveActionParserRegistration;
        };

        [
            uuid(355d37ed-d622-49c0-9b43-75975f1b6dbe),
            version(NTDDI_WIN10_RS1)
        ]
        interface IAdaptiveActionParser : IInspectable
        {
            HRESULT FromJson([in] Windows.Data.Json.JsonObject* inputJson, [out, retval] IAdaptiveActionElement** result);
        };

        [
            uuid(f5a25e03-4d0e-4f0b-9ef6-3e6c37477e86),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveElementRendererRegistration)
        ]
        interface IAdaptiveElementRendererRegistration : IInspectable
        {
            HRESULT Set([in] HSTRING type, [in] IAdaptiveElementRenderer* renderer);
            HRESULT Get([in] HSTRING type, [out, retval] IAdaptiveElementRenderer** result);
            HRESULT Remove([in] HSTRING type);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveElementRendererRegistration
        {
            [default] interface IAdaptiveElementRendererRegistration;
        };

        [
            uuid(c7435e94-1028-4543-b52e-54126fcb411f),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveActionInvoker)
        ]
        interface IAdaptiveActionInvoker : IInspectable
        {
            HRESULT SendActionEvent([in] IAdaptiveActionElement* actionElement);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveActionInvoker
        {
            [default] interface IAdaptiveActionInvoker;
        };

        [
            uuid(d2ad59a2-01aa-4b39-b2a7-5ce1d4028fbb),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveRenderContext)
        ]
        interface IAdaptiveRenderContext : IInspectable
        {
            [propget] HRESULT HostConfig([out, retval] AdaptiveHostConfig** value);

            [propget] HRESULT ElementRenderers([out, retval] AdaptiveElementRendererRegistration** value);

            [propget] HRESULT ActionInvoker([out, retval] AdaptiveActionInvoker** value);

            HRESULT AddInputItem([in] IAdaptiveCardElement* cardElement, [in] Windows.UI.Xaml.UIElement* uiElement);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveRenderContext
        {
            [default] interface IAdaptiveRenderContext;
        };

        [
            uuid(8682c91f-28e3-48fa-8de3-15ba4ec495ca),
            version(NTDDI_WIN10_RS1),
        ]
        interface IAdaptiveElementRenderer : IInspectable
        {
            HRESULT Render([in] IAdaptiveCardElement* element, [in] AdaptiveRenderContext* context, [in] AdaptiveRenderArgs* renderArgs, [out, retval] Windows.UI.Xaml.UIElement** result);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextBlockRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveImageSetRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveContainerRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumnRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveColumnSetRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFactRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveChoiceSetInputRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveDateInputRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveNumberInputRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTextInputRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveTimeInputRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveToggleInputRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveFactSetRenderer
        {
            [default] interface IAdaptiveElementRenderer;
        };

        [
            uuid(8615baba-2695-46d2-a764-9ab473c65bb9),
            version(NTDDI_WIN10_RS1),
            exclusiveto(AdaptiveRenderArgs)
        ]
        interface IAdaptiveRenderArgs : IInspectable
        {
            [propget] HRESULT ContainerStyle([out, retval] ContainerStyle* value);
        };

        [
            version(NTDDI_WIN10_RS1),
            activatable(NTDDI_WIN10_RS1)
        ]
        runtimeclass AdaptiveRenderArgs
        {
            [default] interface IAdaptiveRenderArgs;
        };

    }
}